{
  "project": "NutriCoach",
  "version": "1.0.0",
  "description": "Exemples de templates de features pour NutriCoach",
  "features": {
    "meal-planner": {
      "feature": {
        "name": "Planificateur de repas intelligent",
        "description": "Système de planification automatique des repas basé sur les préférences utilisateur, restrictions alimentaires et objectifs nutritionnels",
        "type": "ai-feature",
        "priority": "high",
        "estimatedTime": "3d",
        "dependencies": ["user-profile", "nutrition-database"],
        "tags": ["ai", "nutrition", "planning", "user-experience"]
      },
      "agents": {
        "db-agent": {
          "required": true,
          "tasks": [
            {
              "id": "meal-schema",
              "type": "schema",
              "description": "Créer les tables pour les repas, plans alimentaires et préférences",
              "priority": "critical",
              "estimatedTime": "4h",
              "useContext7": true,
              "spec": {
                "tables": ["meal_plans", "meals", "meal_ingredients", "user_preferences"],
                "relationships": "meal_plans -> meals -> ingredients",
                "indexes": ["user_id", "date", "meal_type"]
              }
            },
            {
              "id": "nutrition-functions",
              "type": "function",
              "description": "Fonctions de calcul nutritionnel et génération de plans",
              "priority": "high",
              "estimatedTime": "6h",
              "dependsOn": ["meal-schema"],
              "spec": {
                "functions": ["calculate_daily_nutrition", "generate_meal_suggestions", "check_dietary_restrictions"]
              }
            }
          ]
        },
        "ui-agent": {
          "required": true,
          "tasks": [
            {
              "id": "meal-planner-ui",
              "type": "component",
              "description": "Interface de planification des repas avec calendrier et suggestions",
              "priority": "high",
              "estimatedTime": "8h",
              "useContext7": true,
              "spec": {
                "components": ["MealPlannerCalendar", "MealSuggestions", "NutritionSummary"],
                "features": ["drag-drop", "calendar-view", "nutrition-visualization"]
              }
            },
            {
              "id": "meal-preferences",
              "type": "component",
              "description": "Interface de configuration des préférences alimentaires",
              "priority": "medium",
              "estimatedTime": "4h",
              "spec": {
                "components": ["PreferencesForm", "DietaryRestrictions", "NutritionGoals"]
              }
            }
          ]
        },
        "module-agent": {
          "required": true,
          "tasks": [
            {
              "id": "meal-planning-api",
              "type": "api-endpoint",
              "description": "API pour la génération et gestion des plans de repas",
              "priority": "critical",
              "estimatedTime": "6h",
              "useContext7": true,
              "spec": {
                "endpoints": [
                  "POST /api/meal-plans/generate",
                  "GET /api/meal-plans/:userId",
                  "PUT /api/meal-plans/:id",
                  "DELETE /api/meal-plans/:id"
                ]
              }
            },
            {
              "id": "ai-meal-suggestions",
              "type": "ai-integration",
              "description": "Intégration IA pour suggestions personnalisées de repas",
              "priority": "high",
              "estimatedTime": "8h",
              "dependsOn": ["meal-planning-api"],
              "spec": {
                "aiProvider": "openai",
                "models": ["gpt-4", "gpt-3.5-turbo"],
                "features": ["meal-generation", "nutrition-optimization", "preference-matching"]
              }
            }
          ]
        },
        "qa-agent": {
          "required": true,
          "tasks": [
            {
              "id": "meal-planner-tests",
              "type": "integration-tests",
              "description": "Tests d'intégration pour le système de planification",
              "priority": "high",
              "estimatedTime": "6h",
              "useContext7": true,
              "spec": {
                "testSuites": ["meal-generation", "nutrition-calculation", "preference-handling"],
                "coverage": ">=90%"
              }
            },
            {
              "id": "performance-tests",
              "type": "performance-tests",
              "description": "Tests de performance pour génération de plans complexes",
              "priority": "medium",
              "estimatedTime": "4h",
              "spec": {
                "metrics": ["response-time", "memory-usage", "concurrent-users"],
                "thresholds": {"response-time": "<2s", "memory": "<512MB"}
              }
            }
          ]
        },
        "doc-agent": {
          "required": true,
          "tasks": [
            {
              "id": "meal-planner-docs",
              "type": "user-guide",
              "description": "Guide utilisateur pour le planificateur de repas",
              "priority": "medium",
              "estimatedTime": "3h",
              "spec": {
                "sections": ["getting-started", "setting-preferences", "generating-plans", "customizing-meals"],
                "format": "markdown",
                "screenshots": true
              }
            },
            {
              "id": "api-documentation",
              "type": "api-docs",
              "description": "Documentation API pour les endpoints de planification",
              "priority": "medium",
              "estimatedTime": "2h",
              "spec": {
                "format": "openapi",
                "examples": true,
                "authentication": true
              }
            }
          ]
        }
      },
      "validation": {
        "crossAgentChecks": [
          {
            "name": "Database-API Consistency",
            "type": "data-consistency",
            "agents": ["db-agent", "module-agent"],
            "rules": [
              "API endpoints match database schema",
              "All foreign keys properly referenced",
              "Data types consistent across layers"
            ]
          },
          {
            "name": "UI-API Integration",
            "type": "api-contract",
            "agents": ["ui-agent", "module-agent"],
            "rules": [
              "UI components use correct API endpoints",
              "Error handling implemented for all API calls",
              "Loading states properly managed"
            ]
          }
        ],
        "integrationTests": [
          "end-to-end-meal-planning",
          "user-preference-flow",
          "nutrition-calculation-accuracy"
        ],
        "qualityGates": [
          {
            "name": "Code Coverage",
            "type": "coverage",
            "threshold": 85,
            "blocking": true
          },
          {
            "name": "Performance",
            "type": "performance",
            "threshold": 90,
            "blocking": true
          }
        ]
      },
      "deployment": {
        "environment": "staging",
        "rollback": true,
        "monitoring": [
          "api-response-times",
          "meal-generation-success-rate",
          "user-satisfaction-metrics"
        ]
      }
    },

    "nutrition-tracker": {
      "feature": {
        "name": "Suivi nutritionnel en temps réel",
        "description": "Système de tracking automatique des apports nutritionnels avec analyse en temps réel et recommandations personnalisées",
        "type": "analytics-feature",
        "priority": "high",
        "estimatedTime": "2d",
        "dependencies": ["food-database", "user-profile"],
        "tags": ["tracking", "analytics", "real-time", "nutrition"]
      },
      "agents": {
        "db-agent": {
          "required": true,
          "tasks": [
            {
              "id": "nutrition-tracking-schema",
              "type": "schema",
              "description": "Tables pour le suivi nutritionnel et l'historique",
              "priority": "critical",
              "estimatedTime": "3h",
              "useContext7": true,
              "spec": {
                "tables": ["nutrition_entries", "daily_summaries", "nutrition_goals"],
                "partitioning": "by_date",
                "indexes": ["user_id_date", "entry_timestamp"]
              }
            }
          ]
        },
        "ui-agent": {
          "required": true,
          "tasks": [
            {
              "id": "nutrition-dashboard",
              "type": "component",
              "description": "Dashboard de suivi nutritionnel avec graphiques temps réel",
              "priority": "high",
              "estimatedTime": "10h",
              "useContext7": true,
              "spec": {
                "components": ["NutritionChart", "DailyProgress", "RecommendationPanel"],
                "libraries": ["recharts", "framer-motion"],
                "features": ["real-time-updates", "responsive-design"]
              }
            }
          ]
        },
        "module-agent": {
          "required": true,
          "tasks": [
            {
              "id": "nutrition-analysis-api",
              "type": "api-endpoint",
              "description": "API d'analyse nutritionnelle en temps réel",
              "priority": "critical",
              "estimatedTime": "8h",
              "useContext7": true,
              "spec": {
                "endpoints": [
                  "POST /api/nutrition/track",
                  "GET /api/nutrition/summary/:userId",
                  "GET /api/nutrition/recommendations/:userId"
                ],
                "realtime": "websockets"
              }
            }
          ]
        },
        "qa-agent": {
          "required": true,
          "tasks": [
            {
              "id": "nutrition-tracking-tests",
              "type": "integration-tests",
              "description": "Tests complets du système de tracking",
              "priority": "high",
              "estimatedTime": "5h",
              "spec": {
                "testSuites": ["data-accuracy", "real-time-updates", "performance"]
              }
            }
          ]
        },
        "doc-agent": {
          "required": true,
          "tasks": [
            {
              "id": "tracking-user-guide",
              "type": "user-guide",
              "description": "Guide utilisateur pour le suivi nutritionnel",
              "priority": "medium",
              "estimatedTime": "2h",
              "spec": {
                "sections": ["setup-goals", "track-meals", "read-analytics"]
              }
            }
          ]
        }
      },
      "validation": {
        "crossAgentChecks": [
          {
            "name": "Real-time Data Flow",
            "type": "data-consistency",
            "agents": ["db-agent", "module-agent", "ui-agent"],
            "rules": [
              "Data updates propagated in real-time",
              "Consistent state across all components",
              "No data loss during updates"
            ]
          }
        ],
        "qualityGates": [
          {
            "name": "Real-time Performance",
            "type": "performance",
            "threshold": 95,
            "blocking": true
          }
        ]
      }
    },

    "simple-crud": {
      "feature": {
        "name": "Gestion des ingrédients",
        "description": "CRUD simple pour la gestion des ingrédients alimentaires",
        "type": "crud-feature",
        "priority": "medium",
        "estimatedTime": "1d",
        "tags": ["crud", "ingredients", "admin"]
      },
      "agents": {
        "db-agent": {
          "required": true,
          "tasks": [
            {
              "id": "ingredients-table",
              "type": "schema",
              "description": "Table des ingrédients avec informations nutritionnelles",
              "priority": "high",
              "estimatedTime": "2h",
              "spec": {
                "tables": ["ingredients"],
                "fields": ["name", "category", "nutrition_per_100g", "allergens"]
              }
            }
          ]
        },
        "ui-agent": {
          "required": true,
          "tasks": [
            {
              "id": "ingredients-crud-ui",
              "type": "component",
              "description": "Interface CRUD pour les ingrédients",
              "priority": "high",
              "estimatedTime": "4h",
              "spec": {
                "components": ["IngredientsList", "IngredientForm", "IngredientSearch"],
                "features": ["pagination", "search", "sort"]
              }
            }
          ]
        },
        "module-agent": {
          "required": true,
          "tasks": [
            {
              "id": "ingredients-api",
              "type": "api-endpoint",
              "description": "API CRUD pour les ingrédients",
              "priority": "high",
              "estimatedTime": "3h",
              "spec": {
                "endpoints": ["GET", "POST", "PUT", "DELETE"],
                "validation": "zod",
                "pagination": true
              }
            }
          ]
        },
        "qa-agent": {
          "required": true,
          "tasks": [
            {
              "id": "ingredients-crud-tests",
              "type": "unit-tests",
              "description": "Tests unitaires pour le CRUD ingrédients",
              "priority": "medium",
              "estimatedTime": "2h",
              "spec": {
                "coverage": ">=80%"
              }
            }
          ]
        },
        "doc-agent": {
          "required": false,
          "tasks": [
            {
              "id": "ingredients-api-docs",
              "type": "api-docs",
              "description": "Documentation API des ingrédients",
              "priority": "low",
              "estimatedTime": "1h"
            }
          ]
        }
      }
    },

    "security-enhancement": {
      "feature": {
        "name": "Amélioration de la sécurité",
        "description": "Implémentation de mesures de sécurité avancées : 2FA, audit logs, rate limiting",
        "type": "security-feature",
        "priority": "critical",
        "estimatedTime": "2d",
        "tags": ["security", "authentication", "audit", "protection"]
      },
      "agents": {
        "db-agent": {
          "required": true,
          "tasks": [
            {
              "id": "security-tables",
              "type": "schema",
              "description": "Tables pour 2FA, logs d'audit et sessions",
              "priority": "critical",
              "estimatedTime": "3h",
              "useContext7": true,
              "spec": {
                "tables": ["user_2fa", "audit_logs", "security_sessions"],
                "encryption": ["2fa_secret", "backup_codes"],
                "retention": "audit_logs: 1 year"
              }
            },
            {
              "id": "security-policies",
              "type": "rls-policy",
              "description": "Politiques RLS pour la sécurité avancée",
              "priority": "critical",
              "estimatedTime": "4h",
              "spec": {
                "policies": ["user_2fa_access", "audit_log_read", "admin_only_logs"]
              }
            }
          ]
        },
        "module-agent": {
          "required": true,
          "tasks": [
            {
              "id": "2fa-implementation",
              "type": "business-logic",
              "description": "Implémentation de l'authentification à deux facteurs",
              "priority": "critical",
              "estimatedTime": "8h",
              "useContext7": true,
              "spec": {
                "libraries": ["speakeasy", "qrcode"],
                "features": ["totp-generation", "backup-codes", "recovery"]
              }
            },
            {
              "id": "audit-logging",
              "type": "middleware",
              "description": "Système de logs d'audit pour toutes les actions sensibles",
              "priority": "high",
              "estimatedTime": "6h",
              "spec": {
                "events": ["login", "data-change", "admin-action", "security-event"],
                "format": "structured-json"
              }
            },
            {
              "id": "rate-limiting",
              "type": "middleware",
              "description": "Rate limiting intelligent par utilisateur et endpoint",
              "priority": "high",
              "estimatedTime": "4h",
              "spec": {
                "strategies": ["sliding-window", "token-bucket"],
                "storage": "redis"
              }
            }
          ]
        },
        "ui-agent": {
          "required": true,
          "tasks": [
            {
              "id": "2fa-setup-ui",
              "type": "component",
              "description": "Interface de configuration de la 2FA",
              "priority": "high",
              "estimatedTime": "6h",
              "spec": {
                "components": ["QRCodeDisplay", "BackupCodesDisplay", "2FAVerification"],
                "features": ["qr-generation", "code-verification"]
              }
            },
            {
              "id": "security-dashboard",
              "type": "component",
              "description": "Dashboard de sécurité pour les utilisateurs",
              "priority": "medium",
              "estimatedTime": "4h",
              "spec": {
                "components": ["SecuritySettings", "LoginHistory", "DeviceManagement"]
              }
            }
          ]
        },
        "qa-agent": {
          "required": true,
          "tasks": [
            {
              "id": "security-tests",
              "type": "security-tests",
              "description": "Tests de sécurité complets",
              "priority": "critical",
              "estimatedTime": "8h",
              "useContext7": true,
              "spec": {
                "testTypes": ["penetration", "vulnerability-scan", "auth-bypass"],
                "tools": ["owasp-zap", "custom-scripts"]
              }
            }
          ]
        },
        "doc-agent": {
          "required": true,
          "tasks": [
            {
              "id": "security-procedures",
              "type": "technical-doc",
              "description": "Documentation des procédures de sécurité",
              "priority": "high",
              "estimatedTime": "3h",
              "spec": {
                "sections": ["2fa-setup", "incident-response", "security-monitoring"]
              }
            }
          ]
        }
      },
      "validation": {
        "crossAgentChecks": [
          {
            "name": "Security Implementation",
            "type": "security",
            "agents": ["db-agent", "module-agent", "ui-agent"],
            "rules": [
              "All sensitive data encrypted at rest",
              "2FA properly implemented end-to-end",
              "Rate limiting prevents abuse",
              "Audit logs capture all required events"
            ]
          }
        ],
        "qualityGates": [
          {
            "name": "Security Coverage",
            "type": "security",
            "threshold": 100,
            "blocking": true
          }
        ]
      }
    }
  }
}